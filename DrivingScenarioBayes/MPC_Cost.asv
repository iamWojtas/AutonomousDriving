function cost = MPC_Cost(t_in)

global UU n_p w_u w_x

% theta1 = t_in.theta1;
theta2 = t_in.theta2;
% theta3 = t_in.theta3;
theta4 = t_in.theta4;
% theta5 = t_in.theta5;
% theta6 = t_in.theta6;


w_x_theta = [1000 10*theta2 7000 300*theta4 5]; % p=30, c=10
w_x1_theta = repmat(w_x_theta,1,n_p);
W_x_theta = diag(w_x1);

w_u = 1;
W_u = ones(n_c);

UU = -inv(Phi1' * W_x * Phi1 + W_u) * Phi1' * W_x;

sim('Simulation')

lateral_deviation = logsout.getElement('lateral_deviation');    % lateral deviation
relative_yaw_angle = logsout.getElement('relative_yaw_angle');  % relative yaw angle
head_derivative = logsout.getElement('head_derivative');        % yaw angle's derivative
lateral_derivative = logsout.getElement('lateral_derivative');  % lateral deviation's derivative
steering_angle = logsout.getElement('steering_angle');          % steering angle
steer_derivative = logsout.getElement('steer_derivative');      % steering angle's derivative

x1 = lateral_deviation.Values.Data;
x2 = lateral_derivative.Values.Data;
x3 = relative_yaw_angle.Values.Data;
x4 = head_derivative.Values.Data;Values.Data;
x5 = steering_angle.Values.Data;
du = steer_derivative.Values.Data;     

x = [x1,x2,x3,x4,x5];

cost = trace(x * diag(w_x) * x');
cost = cost + du * w_u * du';

end
